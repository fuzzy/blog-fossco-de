* Org-mode configuration

When we left off in part #01 of our series, we had defined a framework for adding "layers" to our configuration. As well, we had defined two layers, a "base" and a "rss" layer, and setup the configurations. I'm assuming you have read the first part of the series, so I'm going to continue building on that base config that we built.

| Name               |       Version | Home                                         |
|--------------------+---------------+----------------------------------------------|
| org-plus-contrib   |     Org 9.1.9 | [[https://orgmode.org/worg/org-contrib/]]        |
| org-bullets        | 20180208.2343 | [[https://github.com/sabof/org-bullets]]         |
| org-beautify-theme | 20170908.2218 | [[https://github.com/jonnay/org-beautify-theme]] |
| org-pomodoro       | 20171108.2114 | [[https://github.com/lolownia/org-pomodoro]]     |

In this article we'll be setting up our base org-mode configuration, some extras and things to make org even nicer than it already is. Which is honestly saying something. We'll begin by adding a directory, "mkdir -p ~/.emacs.d/local/org" should do that just fine if you're on a UNIX or UNIX-like system. Our imports.el file inside would look like:

#+BEGIN_SRC lisp
(setq package-list '(org-plus-contrib
                     org-bullets
                     org-beautify-theme
                     org-pomodoro))
#+END_SRC

Pretty straight-forward. I don't think that going over each item in that list will be super beneficial right at the moment. So let's go right ahead and get into the little configuration bits.

#+BEGIN_SRC lisp
(require 'org)
(require 'ox-publish)
(require 'htmlize)

(if (display-graphic-p)
    (load-theme 'org-beautify t)
    (require 'org-bullets)
    (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1))))

(require 'ox-org)

(org-babel-do-load-languages
 'org-babel-load-languages
 '((dot . t)
   (shell . t)
   (emacs-lisp . t)
   (gnuplot . t)
   (plantuml . t)
   (latex . t)
   (ledger . t)
   (ditaa . t)
   (python . t)
   (ruby . t)
   (sql . t)))
#+END_SRC


Here we just require our libraries, using mostly stock functionality for the moment. The org-babel-load-languages list gives us a good starting place for being able to use the literate devops capabilities as well as graphing and other fun stuff. I know, I know. This article isn't very long or exciting. But that's ok, we will be re-visiting Org-Mode later on as we describe our workflow for "Agile" project management.
